package templates

import "github.com/damiengoehrig/planning-poker/internal/models"

// ParticipantGrid renders the participant grid WITHOUT hx-swap-oob (for initial page load)
templ ParticipantGrid(participants map[string]*models.Participant, state models.RoomState, votes map[string]string) {
	<div id="participants">
		@participantGridContent(participants, state, votes)
	</div>
}

// ParticipantGridOOB renders the participant grid WITH hx-swap-oob (for WebSocket updates)
templ ParticipantGridOOB(participants map[string]*models.Participant, state models.RoomState, votes map[string]string) {
	<div id="participants" hx-swap-oob="true">
		@participantGridContent(participants, state, votes)
	</div>
}

// participantGridContent is the shared content for both templates
templ participantGridContent(participants map[string]*models.Participant, state models.RoomState, votes map[string]string) {
	<div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4 my-8">
		for _, p := range participants {
			if p.Role == models.RoleVoter && p.Connected {
				<div class="text-center p-4 border-2 border-gray-200 rounded-lg bg-gray-50 hover:shadow-md hover:-translate-y-1 transition-all">
					<div class="w-20 h-20 mx-auto mb-3 bg-gray-900 text-white rounded-full flex items-center justify-center text-2xl font-bold">
						if len(p.Name) > 0 {
							{p.Name[0:1]}
						}
					</div>
					<div class="font-semibold text-gray-900 mb-2">{p.Name}</div>
					<div class="mt-3">
						if vote, hasVoted := votes[p.ID]; hasVoted {
							if state == models.StateRevealed {
								<span class="text-2xl font-bold text-gray-900">{vote}</span>
							} else {
								<span class="text-2xl text-green-600">✓</span>
							}
						} else {
							<span class="text-2xl text-gray-400">⏱</span>
						}
					</div>
				</div>
			}
		}
	</div>
	<div class="mt-8 pt-6 border-t border-gray-200">
		<h3 class="text-sm font-semibold text-gray-600 uppercase tracking-wider mb-3">Spectators</h3>
		<div class="flex flex-wrap gap-2">
			for _, p := range participants {
				if p.Role == models.RoleSpectator && p.Connected {
					<span class="inline-block px-4 py-2 bg-gray-100 rounded-md text-gray-700 text-sm">{p.Name}</span>
				}
			}
		</div>
	</div>
}
