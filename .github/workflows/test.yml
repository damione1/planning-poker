name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_call: {}  # Allow this workflow to be called by other workflows

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
          cache: true
          cache-dependency-path: go.sum

      - name: Cache Go build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-build-

      - name: Cache templ binary
        uses: actions/cache@v4
        with:
          path: ~/go/bin/templ
          key: ${{ runner.os }}-templ-${{ hashFiles('go.mod') }}
          restore-keys: |
            ${{ runner.os }}-templ-

      - name: Install dependencies
        run: go mod download

      - name: Install templ
        run: |
          if [ ! -f ~/go/bin/templ ]; then
            go install github.com/a-h/templ/cmd/templ@latest
          fi
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Generate templ templates
        run: templ generate

      - name: Run unit tests
        run: go test ./tests/unit/... -v -race -cover

      - name: Run integration tests
        run: go test ./tests/integration/... -v -race -cover

      - name: Run all tests with coverage
        run: |
          go test ./tests/... -coverprofile=coverage.out -covermode=atomic
          go tool cover -func=coverage.out

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Install templ
        run: go install github.com/a-h/templ/cmd/templ@latest

      - name: Generate templates
        run: templ generate

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.5.0
          args: --timeout=5m

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Install templ
        run: go install github.com/a-h/templ/cmd/templ@latest

      - name: Generate templates
        run: templ generate

      - name: Build application
        run: go build -v -o main .

      - name: Verify binary
        run: ./main --version || true
