package templates

import "github.com/damione1/planning-poker/internal/services"

func getErrorMessage(errorParam string) string {
	switch errorParam {
	case "room_expired":
		return "The room you tried to access has expired and is no longer available."
	case "room_not_found":
		return "The room you tried to access does not exist."
	default:
		return "Unknown error"
	}
}

templ Home(voteTemplates []services.TemplateInfo, errorParam string) {
	@Base("Planning Poker - Create Room") {
		<div class="min-h-screen py-12 px-4 lg:px-8">
			<div class="max-w-7xl mx-auto">
				<div class="grid lg:grid-cols-2 gap-12 items-start">
					<!-- Hero Section (Left Side) -->
					<div class="space-y-8 lg:sticky lg:top-12">
						@heroContent()
					</div>
					<!-- Form Section (Right Side) -->
					<div>
						@roomCreationForm(voteTemplates, errorParam)
					</div>
				</div>
			</div>
		</div>
	}
}

templ heroContent() {
	<!-- Title & Tagline -->
	<div>
		<h1 class="text-5xl lg:text-6xl font-bold mb-4">
			<span class="bg-gradient-to-r from-primary-600 to-success-600 bg-clip-text text-transparent">
				Planning Poker
			</span>
		</h1>
		<p class="text-xl text-slate-600 mb-8">
			Real-time story point estimation for agile teams
		</p>
	</div>
	<!-- Feature List -->
	<div class="space-y-4 mb-8">
		<div class="flex items-start gap-3">
			<span class="text-2xl">‚ö°</span>
			<div>
				<h3 class="font-semibold text-slate-700">Real-time Collaboration</h3>
				<p class="text-sm text-slate-600">Instant updates for all participants</p>
			</div>
		</div>
		<div class="flex items-start gap-3">
			<span class="text-2xl">üéØ</span>
			<div>
				<h3 class="font-semibold text-slate-700">Customizable Scales</h3>
				<p class="text-sm text-slate-600">Fibonacci, t-shirt sizes, or custom values</p>
			</div>
		</div>
		<div class="flex items-start gap-3">
			<span class="text-2xl">üìä</span>
			<div>
				<h3 class="font-semibold text-slate-700">Automatic Statistics</h3>
				<p class="text-sm text-slate-600">Average, agreement %, and distribution</p>
			</div>
		</div>
	</div>
	// <!-- Social Proof -->
	// <div class="flex items-center gap-6 pt-6 border-t border-slate-200">
	// 	<div class="text-center">
	// 		<div class="text-2xl font-bold text-primary-600">5K+</div>
	// 		<div class="text-xs text-slate-500 uppercase tracking-wider">Active Rooms</div>
	// 	</div>
	// 	<div class="text-center">
	// 		<div class="text-2xl font-bold text-primary-600">50K+</div>
	// 		<div class="text-xs text-slate-500 uppercase tracking-wider">Estimates</div>
	// 	</div>
	// 	<div class="text-center">
	// 		<div class="text-2xl font-bold text-primary-600">1K+</div>
	// 		<div class="text-xs text-slate-500 uppercase tracking-wider">Teams</div>
	// 	</div>
	// </div>
}

templ roomCreationForm(voteTemplates []services.TemplateInfo, errorParam string) {
	<div class="elevated-card p-8 bg-gradient-to-br from-white to-slate-50">
		<!-- Header -->
		<div class="mb-6">
			<h2 class="text-2xl font-bold text-slate-800 mb-2">Create a Room</h2>
			<p class="text-sm text-slate-600">Start estimating in seconds</p>
		</div>
		<!-- Error Display -->
		if errorParam != "" {
			<div class="mb-6 p-4 bg-red-50 border border-red-200 rounded-xl">
				<div class="flex items-start gap-3">
					<span class="text-red-500 text-xl">‚ö†Ô∏è</span>
					<div class="flex-1">
						<p class="text-sm font-medium text-red-900">{ getErrorMessage(errorParam) }</p>
					</div>
				</div>
			</div>
		}
		<!-- Error Container -->
		<div id="form-errors"></div>
		<!-- Form Fields -->
		<form method="POST" action="/room" x-data="createRoomForm()" hx-post="/room" hx-target="#form-errors" hx-swap="innerHTML" class="space-y-6">
			<!-- Room Name Input -->
			<div>
				<label for="name" class="block text-sm font-semibold text-slate-700 mb-2">
					Room Name
				</label>
				<input
					type="text"
					id="name"
					name="name"
					required
					placeholder="Sprint 23 Planning"
					class="w-full px-4 py-3 border-2 border-slate-200 rounded-xl focus:ring-4 focus:ring-primary-200 focus:border-primary-400 outline-none transition-all duration-200 bg-white hover:border-slate-300"
				/>
			</div>
			<!-- Value Template -->
			<div>
				<label class="block text-sm font-semibold text-slate-700 mb-2">
					Value Template
				</label>
				<select
					x-model="selectedTemplate"
					@change="updateCustomValues()"
					class="w-full px-4 py-3 border-2 border-slate-200 rounded-xl focus:ring-4 focus:ring-primary-200 focus:border-primary-400 outline-none transition-all duration-200 bg-white hover:border-slate-300"
				>
					for _, template := range voteTemplates {
						<option value={ template.ID }>{ template.Description }</option>
					}
				</select>
				<input
					type="text"
					name="customValues"
					x-model="customValues"
					placeholder="0.5, 1, 2, 3, 5, 8, 13, 20, 40, 100"
					required
					class="w-full px-4 py-3 border-2 mt-2 border-slate-200 rounded-xl focus:ring-4 focus:ring-primary-200 focus:border-primary-400 outline-none transition-all duration-200 bg-white hover:border-slate-300"
				/>
				<p class="text-xs text-slate-500">
					Edit the values above or select a different template (comma-separated, minimum 2 values)
				</p>
			</div>
			<!-- Hidden field to always send 'custom' as pointing method -->
			<input type="hidden" name="pointingMethod" value="custom"/>
			<!-- Room Settings -->
			<div>
				<button
					type="button"
					@click="showSettings = !showSettings"
					class="w-full flex items-center justify-between px-4 py-3 border-2 border-slate-200 rounded-xl hover:border-primary-300 hover:bg-primary-50 transition-all duration-200"
				>
					<div class="flex items-center gap-2">
						<span class="text-lg">‚öôÔ∏è</span>
						<span class="text-sm font-semibold text-slate-700">Room Settings (Optional)</span>
					</div>
					<svg
						class="w-5 h-5 text-slate-400 transition-transform duration-200"
						:class="{ 'rotate-180': showSettings }"
						fill="none"
						stroke="currentColor"
						viewBox="0 0 24 24"
					>
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
					</svg>
				</button>
				<div x-show="showSettings" x-collapse class="mt-4 p-4 bg-slate-50 border border-slate-200 rounded-xl space-y-4">
					<p class="text-sm text-slate-600 mb-4">Control who can perform specific actions in this room.</p>
					@PermissionToggles()
				</div>
			</div>
			<!-- Submit Button with Icon -->
			<button
				type="submit"
				class="w-full bg-gradient-to-br from-primary-500 to-success-500 text-white py-4 px-6 rounded-2xl font-bold hover:shadow-2xl hover:shadow-primary-300/50 hover:-translate-y-1 active:translate-y-0 transition-all duration-300 focus:outline-none focus:ring-4 focus:ring-primary-300 focus:ring-offset-2 flex items-center justify-center gap-2"
			>
				<span>Create Room</span>
				<span class="text-xl">‚Üí</span>
			</button>
		</form>
		<!-- Quick Start Tip -->
		<div class="mt-6 p-4 bg-accent-50 border border-accent-200 rounded-xl">
			<div class="flex items-start gap-3">
				<span class="text-xl">üí°</span>
				<div>
					<p class="text-sm font-medium text-accent-900">Quick Tip</p>
					<p class="text-xs text-accent-700 mt-1">
						Share the room link or QR code with your team after creation
					</p>
				</div>
			</div>
		</div>
	</div>
}
